---
title: "Analisis Genomas: E. coli"
author: "OMICs Analysis"
format: 
  html:
    toc: true
    toc-depth: 3
    theme: journal
editor: visual
execute:
  engine: knitr
lang: es
---

![](images/logo_OAN_for_white.png){fig-align="center" width="300"}

# Introducci√≥n

Vamos a trabajar con ensambles de distintas cepas de E. coli hospedero Bovino.

**NOTA** ‚ö†Ô∏èüëÅÔ∏è‚Äçüó®Ô∏è: Para las figuras del curso se utilizaron todos los 110 genomas con hospedero Bovino. Para este tutorial generaremos un subconjunto de 15, ya incluidos genomas de referencia para patotipos EHEC y EPEC.

Para iniciar vamos a descargar los datos disponibles que existan usando `datasets` de NCBI, lo puedes instalar [aqu√≠](https://github.com/ncbi/datasets).

Con el siguiente c√≥digo vamos a descargar los genomas depoitados en NCBI de *E. coli*

```{bash, eval=FALSE}
mkdir 1_data
cd 1_data

$HOME/bin/datasets \
summary genome taxon '562' \
--assembly-level complete\
--assembly-source refseq \
--as-json-lines > Escherichia_coli_562.json
```

```{bash, eval=FALSE}
$HOME/bin/dataformat tsv genome \
--inputfile Escherichia_coli_562.json > Escherichia_coli_562.tsv
```

Este conjunto de metadatos `Escherichia_coli_562.tsv` nos servir√° para seleccionar los ensambles de genoma que necesitamos. Para ello puedes utilizar la plataforma o m√©todo que m√°s prefieras, y quedarnos con un conjunto m√°s peque√±o de genomas para descagar. En este tutorial este ser√° el archivo con el que trabajaremos `Escherichia_coli_Bovine_Host.tsv`, este archivo se ve de la siguiete forma (las primeras 5 filas):

```{r, echo=FALSE, message=FALSE}
df <- readr::read_tsv("tables/Escherichia_coli_Bovine_Host.tsv")|> head(5)

gt::gt(df)
```

Para descargar los archivos vamos a utilizar el siguiente c√≥digo:

```{bash, eval=FALSE}
for g in \$(cut -f1 Escherichia_coli_Bovine_Host.tsv | awk 'NR > 1'); do
        if [ -f \$g.zip ]; then
            echo \$g'.zip exists';
        else
            $HOME/bin/datasets download genome accession \$g \
            --include genome --filename \$g'.zip';
            sleep 2;
        fi
    done
```

Descomprimir los archivos

```{bash, eval=FALSE}
for g in \$(cut -f1 Escherichia_coli_Bovine_Host.tsv | awk 'NR > 1'); do
        unzip \$g.zip -d \$g;
        mv \$g/ncbi_dataset/data/\$g/*.fna \$g.fna;
        rm -r \$g/;
    done
```

Con esto ya contamos con un sub conjunto de datos listo para trabajar.

# Anotaci√≥n de genomas

## Prokka

`Prokka` es un anotador de genomas para organismos procariontes, lo puedes descargar de [aqu√≠](https://github.com/tseemann/prokka).

```{bash, eval=FALSE}
genomes=$( ls $HOME/1_data/*.fna )

for g in $genomes; do
 prokka \
 $g \
 --cpus 6 \
 --outdir prokka/${id%.fna} \
 --genus Escherichia
done
 
```

## Bakta

Bakta es uno de los anotadores de genomas "m√°s" completos ya que usa distintas bases, utiliza a `DIAMOND` de alineador. Lo puedes descargar [aqu√≠](https://github.com/oschwengers/bakta). Es necesario descargar la base de datos para poder ejecutarlo, para este ejemplo se guard√≥ en el directorio `$HOME/db`

**Precauci√≥n** ‚ö†Ô∏è: Necesitas 8GB de RAM, disponibilidad de tiempo y memoria en tu m√°quina, con m√°s de 10 genomas podr√≠a demorar seg√∫n la capacidad de nucleos que tengas. Para este tutorial solo te mostraremos como es el c√≥digo pero no se utilizar√° este paso para los siguientes an√°lisis.

```{bash, eval=FALSE}
source $HOME/bin/bakta-env/bin/activate
```

```{bash, eval=FALSE}
#| code-fold: true
#| code-summary: "Muestra el c√≥digo"
genomes=$(ls $HOME/1_data)

experiment_file="$HOME/Experiment_Design.tsv"


for g in $genomes; do
    id=$(basename "$g" | awk -F'/' '{print $NF}' | sed 's/.fna$//')

    strain=$(awk -F'\t' -v id="$id" '$1 == id {print $3}' "$experiment_file")

    bakta \
    --db $HOME/db \
    --output $HOME/2_annotation/bakta/${id} \
    --genus Escherichia \
    --strain "$strain" \
    --threads 6 \
    --force $HOME/1_data/${g}
done
```

## AMRfinder

```{bash, eval=FALSE}

workdir=$HOME/2_annotation/prokka
output_dir=$HOME/2_annotation/AMR

for dir in $workdir/*; do
  if [ -d "$dir" ]; then
      sample=$(basename "$dir")
      protein=$dir/$sample.faa
      dna=$dir/$sample.fna
      gff=$dir/$sample.gff3

  temp_gff="${output_dir}/amrfinder_${sample}.gff"
		perl -pe '/^##FASTA/ && exit; s/(\W)Name=/$1OldName=/i; s/ID=([^;]+)/ID=$1;Name=$1/' $gff > $temp_gff

      amrfinder \
      -p $protein \
      -n $dna \
      -g $temp_gff \
      --plus --organism Escherichia \
      -o $output_dir/${sample}_amrfinder.tsv \
      --threads 6
done
```

## Virulence Factor DataBase

## 
